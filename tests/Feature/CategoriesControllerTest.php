<?php

namespace Tests\Feature;

use App\Category;
use App\Item;
use Tests\TestCase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Foundation\Testing\RefreshDatabase;

class CategoriesControllerTest extends TestCase
{

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        if (!Category::count()) {
            $this->seed('CategoriesSeeder');
        }
    }

    /** @test */
    public function it_can_see_tree_of_categories()
    {
        $this->getJson('api/categories/tree')
            ->assertStatus(200)
            ->assertJsonStructure([
                'data' => [
                    '*' => [
                        'id', 'name', 'parent_id', 'lft', 'rgt', 'depth',
                        'created_at', 'updated_at', 'children',
                    ]
                ]
            ]);
    }

    /** @test */
    public function it_can_see_list_of_categories()
    {
        $this->getJson('api/categories')
            ->assertStatus(200)
            ->assertJsonStructure([
                'data' => [
                    '*' => [
                        'id', 'name', 'parent_id', 'lft', 'rgt', 'depth',
                        'created_at', 'updated_at',
                    ]
                ]
            ]);
    }

    /** @test */
    public function it_can_see_single_category()
    {
        $category = Category::first();
        $this->getJson("api/categories/{$category->id}")
            ->assertStatus(200)
            ->assertJsonStructure([
                'data' => [
                    'id', 'name', 'parent_id', 'lft', 'rgt', 'depth',
                    'created_at', 'updated_at',
                ]
            ]);
    }

    /** @test */
    public function it_can_create_category()
    {
        $body = [
            'name' => 'El Mariarchi',
        ];
        $this->postJson('api/categories', $body)
            ->assertStatus(201)
            ->assertJsonStructure([
                'data' => [
                    'id', 'name', 'parent_id', 'lft', 'rgt', 'depth',
                    'created_at', 'updated_at',
                ]
            ])
            ->assertJson([
                'data' => $body
            ]);
    }

    /** @test */
    public function it_can_update_category()
    {
        $category = Category::first();
        $body = [
            'name' => 'El Mariarchi #2',
        ];
        $this->patchJson("api/categories/{$category->id}", $body)
            ->assertStatus(200)
            ->assertJsonStructure([
                'data' => [
                    'id', 'name', 'parent_id', 'lft', 'rgt', 'depth',
                    'created_at', 'updated_at',
                ]
            ])
            ->assertJson([
                'data' => $body
            ]);
    }




}
